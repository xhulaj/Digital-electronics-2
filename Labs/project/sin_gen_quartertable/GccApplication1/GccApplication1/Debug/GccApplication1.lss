
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800100  000002c4  00000358  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000087  00800180  00800180  000003d8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000408  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000448  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d76  00000000  00000000  00000530  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008af  00000000  00000000  000012a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000632  00000000  00000000  00001b55  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000204  00000000  00000000  00002188  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ad  00000000  00000000  0000238c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000574  00000000  00000000  00002939  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00002ead  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 9a 00 	jmp	0x134	; 0x134 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 08 01 	jmp	0x210	; 0x210 <__vector_18>
  4c:	0c 94 36 01 	jmp	0x26c	; 0x26c <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ec       	ldi	r30, 0xC4	; 196
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 38       	cpi	r26, 0x80	; 128
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a0 e8       	ldi	r26, 0x80	; 128
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 30       	cpi	r26, 0x07	; 7
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 78 00 	call	0xf0	; 0xf0 <main>
  9e:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <GPIO_config_output>:
  a6:	fc 01       	movw	r30, r24
  a8:	40 81       	ld	r20, Z
  aa:	21 e0       	ldi	r18, 0x01	; 1
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <GPIO_config_output+0xe>
  b0:	22 0f       	add	r18, r18
  b2:	33 1f       	adc	r19, r19
  b4:	6a 95       	dec	r22
  b6:	e2 f7       	brpl	.-8      	; 0xb0 <GPIO_config_output+0xa>
  b8:	24 2b       	or	r18, r20
  ba:	20 83       	st	Z, r18
  bc:	08 95       	ret

000000be <GPIO_write_low>:
  be:	fc 01       	movw	r30, r24
  c0:	90 81       	ld	r25, Z
  c2:	21 e0       	ldi	r18, 0x01	; 1
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	02 c0       	rjmp	.+4      	; 0xcc <GPIO_write_low+0xe>
  c8:	22 0f       	add	r18, r18
  ca:	33 1f       	adc	r19, r19
  cc:	6a 95       	dec	r22
  ce:	e2 f7       	brpl	.-8      	; 0xc8 <GPIO_write_low+0xa>
  d0:	20 95       	com	r18
  d2:	29 23       	and	r18, r25
  d4:	20 83       	st	Z, r18
  d6:	08 95       	ret

000000d8 <GPIO_toggle>:
  d8:	fc 01       	movw	r30, r24
  da:	40 81       	ld	r20, Z
  dc:	21 e0       	ldi	r18, 0x01	; 1
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <GPIO_toggle+0xe>
  e2:	22 0f       	add	r18, r18
  e4:	33 1f       	adc	r19, r19
  e6:	6a 95       	dec	r22
  e8:	e2 f7       	brpl	.-8      	; 0xe2 <GPIO_toggle+0xa>
  ea:	24 27       	eor	r18, r20
  ec:	20 83       	st	Z, r18
  ee:	08 95       	ret

000000f0 <main>:
#include "sinus_gen.h"

int main(void)
{
	/*Timer/Counter 0 settings --------------------------------------------------------------*/
	TIM0_set_mode_CTC();			// Set timer to CTC mode
  f0:	85 b5       	in	r24, 0x25	; 37
  f2:	87 7f       	andi	r24, 0xF7	; 247
  f4:	85 bd       	out	0x25, r24	; 37
  f6:	84 b5       	in	r24, 0x24	; 36
  f8:	82 60       	ori	r24, 0x02	; 2
  fa:	84 bd       	out	0x24, r24	; 36
  fc:	84 b5       	in	r24, 0x24	; 36
  fe:	8e 7f       	andi	r24, 0xFE	; 254
 100:	84 bd       	out	0x24, r24	; 36
	TIM0_overflow_16us();
 102:	85 b5       	in	r24, 0x25	; 37
 104:	89 7f       	andi	r24, 0xF9	; 249
 106:	85 bd       	out	0x25, r24	; 37
 108:	85 b5       	in	r24, 0x25	; 37
 10a:	81 60       	ori	r24, 0x01	; 1
 10c:	85 bd       	out	0x25, r24	; 37
	TIM0_CTC_A_interrupt_enable();	// Interrupt enable
 10e:	ee e6       	ldi	r30, 0x6E	; 110
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	82 60       	ori	r24, 0x02	; 2
 116:	80 83       	st	Z, r24
	OCR0A = COMP_REG_A_MASK;		// Set Compare register A mask for 1 MHz frequency
 118:	8f e1       	ldi	r24, 0x1F	; 31
 11a:	87 bd       	out	0x27, r24	; 39
	GPIO_config_output(&DDRC, PC0);
 11c:	60 e0       	ldi	r22, 0x00	; 0
 11e:	87 e2       	ldi	r24, 0x27	; 39
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_write_low(&PORTC, PC0);
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	88 e2       	ldi	r24, 0x28	; 40
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 5f 00 	call	0xbe	; 0xbe <GPIO_write_low>
    sei();
 130:	78 94       	sei
 132:	ff cf       	rjmp	.-2      	; 0x132 <main+0x42>

00000134 <__vector_14>:
    while (1) 
    {
    }
}
ISR(TIMER0_COMPA_vect)
{
 134:	1f 92       	push	r1
 136:	0f 92       	push	r0
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	0f 92       	push	r0
 13c:	11 24       	eor	r1, r1
 13e:	2f 93       	push	r18
 140:	3f 93       	push	r19
 142:	4f 93       	push	r20
 144:	5f 93       	push	r21
 146:	6f 93       	push	r22
 148:	7f 93       	push	r23
 14a:	8f 93       	push	r24
 14c:	9f 93       	push	r25
 14e:	af 93       	push	r26
 150:	bf 93       	push	r27
 152:	ef 93       	push	r30
 154:	ff 93       	push	r31
		0b11111110,    // sample125
		0b11111110,    // sample126
		0b11111110,    // sample127
		0b11111110,    // sample128
	};
	signal_amplitude = sinus_gen(&lookup_table, sample_cnt_1);
 156:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <__data_end>
 15a:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <__data_end+0x1>
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	91 e0       	ldi	r25, 0x01	; 1
 162:	0e 94 db 00 	call	0x1b6	; 0x1b6 <sinus_gen>
	sample_cnt_1 ++;
 166:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <__data_end>
 16a:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <__data_end+0x1>
 16e:	01 96       	adiw	r24, 0x01	; 1
	if(sample_cnt_1 > 512)
 170:	81 30       	cpi	r24, 0x01	; 1
 172:	22 e0       	ldi	r18, 0x02	; 2
 174:	92 07       	cpc	r25, r18
 176:	28 f4       	brcc	.+10     	; 0x182 <__vector_14+0x4e>
		0b11111110,    // sample126
		0b11111110,    // sample127
		0b11111110,    // sample128
	};
	signal_amplitude = sinus_gen(&lookup_table, sample_cnt_1);
	sample_cnt_1 ++;
 178:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <__data_end+0x1>
 17c:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <__data_end>
 180:	04 c0       	rjmp	.+8      	; 0x18a <__vector_14+0x56>
	if(sample_cnt_1 > 512)
		sample_cnt_1 = 0;
 182:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <__data_end+0x1>
 186:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <__data_end>
	GPIO_toggle(&PORTC, PC0);
 18a:	60 e0       	ldi	r22, 0x00	; 0
 18c:	88 e2       	ldi	r24, 0x28	; 40
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	0e 94 6c 00 	call	0xd8	; 0xd8 <GPIO_toggle>
}
 194:	ff 91       	pop	r31
 196:	ef 91       	pop	r30
 198:	bf 91       	pop	r27
 19a:	af 91       	pop	r26
 19c:	9f 91       	pop	r25
 19e:	8f 91       	pop	r24
 1a0:	7f 91       	pop	r23
 1a2:	6f 91       	pop	r22
 1a4:	5f 91       	pop	r21
 1a6:	4f 91       	pop	r20
 1a8:	3f 91       	pop	r19
 1aa:	2f 91       	pop	r18
 1ac:	0f 90       	pop	r0
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	0f 90       	pop	r0
 1b2:	1f 90       	pop	r1
 1b4:	18 95       	reti

000001b6 <sinus_gen>:
 1b6:	9b 01       	movw	r18, r22
 1b8:	2f 57       	subi	r18, 0x7F	; 127
 1ba:	31 09       	sbc	r19, r1
 1bc:	21 38       	cpi	r18, 0x81	; 129
 1be:	31 05       	cpc	r19, r1
 1c0:	40 f4       	brcc	.+16     	; 0x1d2 <sinus_gen+0x1c>
 1c2:	9c 01       	movw	r18, r24
 1c4:	26 1b       	sub	r18, r22
 1c6:	37 0b       	sbc	r19, r23
 1c8:	f9 01       	movw	r30, r18
 1ca:	e1 50       	subi	r30, 0x01	; 1
 1cc:	ff 4f       	sbci	r31, 0xFF	; 255
 1ce:	80 81       	ld	r24, Z
 1d0:	08 95       	ret
 1d2:	9b 01       	movw	r18, r22
 1d4:	3a 95       	dec	r19
 1d6:	20 38       	cpi	r18, 0x80	; 128
 1d8:	31 05       	cpc	r19, r1
 1da:	30 f4       	brcc	.+12     	; 0x1e8 <sinus_gen+0x32>
 1dc:	fc 01       	movw	r30, r24
 1de:	e2 0f       	add	r30, r18
 1e0:	f3 1f       	adc	r31, r19
 1e2:	80 81       	ld	r24, Z
 1e4:	81 95       	neg	r24
 1e6:	08 95       	ret
 1e8:	9b 01       	movw	r18, r22
 1ea:	20 58       	subi	r18, 0x80	; 128
 1ec:	31 40       	sbci	r19, 0x01	; 1
 1ee:	20 38       	cpi	r18, 0x80	; 128
 1f0:	31 05       	cpc	r19, r1
 1f2:	48 f4       	brcc	.+18     	; 0x206 <sinus_gen+0x50>
 1f4:	9c 01       	movw	r18, r24
 1f6:	26 1b       	sub	r18, r22
 1f8:	37 0b       	sbc	r19, r23
 1fa:	f9 01       	movw	r30, r18
 1fc:	e1 50       	subi	r30, 0x01	; 1
 1fe:	fe 4f       	sbci	r31, 0xFE	; 254
 200:	80 81       	ld	r24, Z
 202:	81 95       	neg	r24
 204:	08 95       	ret
 206:	fc 01       	movw	r30, r24
 208:	e6 0f       	add	r30, r22
 20a:	f7 1f       	adc	r31, r23
 20c:	80 81       	ld	r24, Z
 20e:	08 95       	ret

00000210 <__vector_18>:
 210:	1f 92       	push	r1
 212:	0f 92       	push	r0
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	0f 92       	push	r0
 218:	11 24       	eor	r1, r1
 21a:	2f 93       	push	r18
 21c:	8f 93       	push	r24
 21e:	9f 93       	push	r25
 220:	ef 93       	push	r30
 222:	ff 93       	push	r31
 224:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 228:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 22c:	8c 71       	andi	r24, 0x1C	; 28
 22e:	e0 91 84 01 	lds	r30, 0x0184	; 0x800184 <UART_RxHead>
 232:	ef 5f       	subi	r30, 0xFF	; 255
 234:	ef 73       	andi	r30, 0x3F	; 63
 236:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <UART_RxTail>
 23a:	e9 17       	cp	r30, r25
 23c:	39 f0       	breq	.+14     	; 0x24c <__vector_18+0x3c>
 23e:	e0 93 84 01 	sts	0x0184, r30	; 0x800184 <UART_RxHead>
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	e9 57       	subi	r30, 0x79	; 121
 246:	fe 4f       	sbci	r31, 0xFE	; 254
 248:	20 83       	st	Z, r18
 24a:	01 c0       	rjmp	.+2      	; 0x24e <__vector_18+0x3e>
 24c:	82 e0       	ldi	r24, 0x02	; 2
 24e:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <UART_LastRxError>
 252:	89 2b       	or	r24, r25
 254:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <UART_LastRxError>
 258:	ff 91       	pop	r31
 25a:	ef 91       	pop	r30
 25c:	9f 91       	pop	r25
 25e:	8f 91       	pop	r24
 260:	2f 91       	pop	r18
 262:	0f 90       	pop	r0
 264:	0f be       	out	0x3f, r0	; 63
 266:	0f 90       	pop	r0
 268:	1f 90       	pop	r1
 26a:	18 95       	reti

0000026c <__vector_19>:
 26c:	1f 92       	push	r1
 26e:	0f 92       	push	r0
 270:	0f b6       	in	r0, 0x3f	; 63
 272:	0f 92       	push	r0
 274:	11 24       	eor	r1, r1
 276:	8f 93       	push	r24
 278:	9f 93       	push	r25
 27a:	ef 93       	push	r30
 27c:	ff 93       	push	r31
 27e:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <UART_TxHead>
 282:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <UART_TxTail>
 286:	98 17       	cp	r25, r24
 288:	69 f0       	breq	.+26     	; 0x2a4 <__vector_19+0x38>
 28a:	e0 91 85 01 	lds	r30, 0x0185	; 0x800185 <UART_TxTail>
 28e:	ef 5f       	subi	r30, 0xFF	; 255
 290:	ef 73       	andi	r30, 0x3F	; 63
 292:	e0 93 85 01 	sts	0x0185, r30	; 0x800185 <UART_TxTail>
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	e9 53       	subi	r30, 0x39	; 57
 29a:	fe 4f       	sbci	r31, 0xFE	; 254
 29c:	80 81       	ld	r24, Z
 29e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 2a2:	05 c0       	rjmp	.+10     	; 0x2ae <__vector_19+0x42>
 2a4:	e1 ec       	ldi	r30, 0xC1	; 193
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	8f 7d       	andi	r24, 0xDF	; 223
 2ac:	80 83       	st	Z, r24
 2ae:	ff 91       	pop	r31
 2b0:	ef 91       	pop	r30
 2b2:	9f 91       	pop	r25
 2b4:	8f 91       	pop	r24
 2b6:	0f 90       	pop	r0
 2b8:	0f be       	out	0x3f, r0	; 63
 2ba:	0f 90       	pop	r0
 2bc:	1f 90       	pop	r1
 2be:	18 95       	reti

000002c0 <_exit>:
 2c0:	f8 94       	cli

000002c2 <__stop_program>:
 2c2:	ff cf       	rjmp	.-2      	; 0x2c2 <__stop_program>
